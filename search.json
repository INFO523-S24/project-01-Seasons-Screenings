[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Season’s Screenings",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd"
  },
  {
    "objectID": "proposal.html#dataset",
    "href": "proposal.html#dataset",
    "title": "Season’s Screenings",
    "section": "Dataset",
    "text": "Dataset\n\ndata = pd.read_csv('data/holiday_movies.csv')"
  },
  {
    "objectID": "proposal.html#metadata",
    "href": "proposal.html#metadata",
    "title": "Season’s Screenings",
    "section": "Metadata",
    "text": "Metadata\n\n\n\n\n\n\n\n\nColumn\nData type\nDescription\n\n\n\n\ntconst\nstring\nAlphanumeric unique identifier of the title\n\n\ntitle_type\ncategorical\nThe type/format of the title (movie, video, or tvMovie)\n\n\nprimary_title\nstring\nThe more popular title / the title used by the filmmakers on promotional materials at the point of release\n\n\noriginal_title\nstring\nOriginal title, in the original language\n\n\nyear\nnumerical\nThe release year of a title\n\n\nruntime_minutes\nnumerical\nPrimary runtime of the title, in minutes\n\n\ngenres\ncategorical\nIncludes up to three genres associated with the title (comma-delimited)\n\n\nsimple_title\nstring\nThe title in lowercase, with punctuation removed, for easier filtering and grouping\n\n\naverage_rating\nnumerical\nWeighted average of all the individual user ratings on IMDb\n\n\nnum_votes\nnumerical\nNumber of votes the title has received on IMDb (titles with fewer than 10 votes were not included in this dataset)\n\n\nchristmas\nboolean\nWhether the title includes “christmas”, “xmas”, “x mas”, etc\n\n\nhanukkah\nboolean\nWhether the title includes “hanukkah”, “chanukah”, etc\n\n\nkwanzaa\nboolean\nWhether the title includes “kwanzaa”\n\n\nholiday\nboolean\nWhether the title includes the word “holiday”"
  },
  {
    "objectID": "proposal.html#description",
    "href": "proposal.html#description",
    "title": "Season’s Screenings",
    "section": "Description",
    "text": "Description\nThe Holiday Movies dataset is a collection that focuses on movies with themes or titles related to various holidays. It spans various genres, years, and holiday themes, looking at how holiday movies have evolved over time and how audiences have received them. By selecting the Holiday Movies dataset, we leverage a rich compilation of data to explore changes in popularity, genre preferences, and financial success over time.Our goal is to uncover patterns and insights that could inform future film production and marketing strategies.\n\nProvenance\nThe dataset is courtesy of the Tidy Tuesday project and can be found on their official GitHub repository. The origin of the data is IMDb’s Non-Commercial datasets. The criteria for including a movie in this dataset were very simple. All works that had “Holiday” in the title were included, as well as those that had specific types of holidays in the title (“Christmas”, “Hannukah” and “Kwanzaa”).\n\n\nStructure & Types of Data\nLet us look at the first 5 lines of the data:\n\ndata.head()\n\n\n\n\n\n\n\n\n\ntconst\ntitle_type\nprimary_title\noriginal_title\nyear\nruntime_minutes\ngenres\nsimple_title\naverage_rating\nnum_votes\nchristmas\nhanukkah\nkwanzaa\nholiday\n\n\n\n\n0\ntt0020356\nmovie\nSailor's Holiday\nSailor's Holiday\n1929\n58.0\nComedy\nsailors holiday\n5.4\n55\nFalse\nFalse\nFalse\nTrue\n\n\n1\ntt0020823\nmovie\nThe Devil's Holiday\nThe Devil's Holiday\n1930\n80.0\nDrama,Romance\nthe devils holiday\n6.0\n242\nFalse\nFalse\nFalse\nTrue\n\n\n2\ntt0020985\nmovie\nHoliday\nHoliday\n1930\n91.0\nComedy,Drama\nholiday\n6.3\n638\nFalse\nFalse\nFalse\nTrue\n\n\n3\ntt0021268\nmovie\nHoliday of St. Jorgen\nPrazdnik svyatogo Yorgena\n1930\n83.0\nComedy\nholiday of st jorgen\n7.4\n256\nFalse\nFalse\nFalse\nTrue\n\n\n4\ntt0021377\nmovie\nSin Takes a Holiday\nSin Takes a Holiday\n1930\n81.0\nComedy,Romance\nsin takes a holiday\n6.1\n740\nFalse\nFalse\nFalse\nTrue\n\n\n\n\n\n\n\n\nLet us look at the shape of the data:\n\ndata.shape\n\n(2265, 14)\n\n\nThe dataset contains 2265 rows and 14 columns. The data contains both numerical and categorical features. The genres column is essentially a set that contains multiple values, since a movie can belong to multiple genres.\n\n\nRationale for Selecting\nThe dataset offers rich data with both numerical and categorical features that span over multiple decades. The data is broad enough to allow for creative research yet does not require deep domain knowledge. This makes it a good choice for a team with varied backgrounds."
  },
  {
    "objectID": "proposal.html#questions",
    "href": "proposal.html#questions",
    "title": "Season’s Screenings",
    "section": "Questions:",
    "text": "Questions:\n\nQuestion 1\nHow have popular movies been changing over the decades?\nWe will look at the trends in popular holiday movies over the decades. Considering the movies with average ratings that fall in the range between the 3rd and 4th quartiles, we will show in which directions holiday movies have been evolving in terms of genres, duration, and lengths of titles.\n\n\nQuestion 2\nWhat kind of holiday movies earn the most money?\nWe will look at the correlations between movie features (such as year of production, duration, length of title, rating, genres, and type of holiday) and the amount of earnings the movie generated. For that, we will supplement the existing dataset with box office information using IMDb’s API. These observations may be useful in developing a model for estimating the investment worthiness of a movie (whether in production stage or adding an existing movie to a portfolio)."
  },
  {
    "objectID": "proposal.html#analysis-plan",
    "href": "proposal.html#analysis-plan",
    "title": "Season’s Screenings",
    "section": "Analysis plan",
    "text": "Analysis plan\n\nQuestion 1\nData Preparation:\n\nVariables Involved: Title, release year, genre(s), duration, ratings.\nVariables to be Created: Title Length(Calculate the number of characters in each movie title).\nRating Quartile: Categorize movies based on their rating quartile for easier analysis.\nGenre Count: Count of genres per movie, as movies might belong to multiple genres.\nData Cleaning: cleaning the data for inconsistencies, missing values, and outliers.\n\nTrend Analysis:\n\nGenre Analysis: Determine the most common genres among holiday movies in the selected rating range.\nDuration Analysis: Examine if there’s a preferred movie length that correlates with higher ratings within the 3rd to 4th quartile range and how this preference has changed.\nTitle Length Analysis: Investigate the relationship between the length of movie titles and their ratings.\nYearly Rating Analysis: Assess how the average ratings of holiday movies in the 3rd to 4th quartile have fluctuated over time, looking for any patterns or significant changes.\nAnalytical method: we plan to employ statistical methods and machine learning algorithms to uncover underlying patterns and correlations. Initially, descriptive statistics and visualization tools (such as line graphs and bar charts) will be used to observe changes over time.\n\n\n\nQuestion 2\nData Preparation:\n\nVariables Involved: Title, release year, genre(s), duration, ratings, earnings.\nVariables to be Created: Title Length(Calculate the number of characters in each movie title)\nGenre Count: Count of genres per movie, as movies might belong to multiple genres.\nExternal Data to be Merged: Earnings data for each movie from IMDb’s API.\nData Cleaning: cleaning the data for inconsistencies, missing values, and outliers.\n\nTrend Analysis:\n\nEarnings and Duration Analysis: Investigate the relationship between the movie’s duration and its earnings. Determine if there’s a preferred movie length that correlates with higher earnings.\nEarnings and Title Length Analysis: Explore whether the length of the movie title has any correlation with its earnings. This could include examining if shorter or longer titles are associated with higher earnings.\nEarnings and Rating Analysis: Assess the relationship between a movie’s rating and its earnings. Determine if higher-rated movies tend to earn more.\nEarnings and Release Year Analysis: Look at how the earnings of movies have changed over time. This could involve analyzing trends in movie earnings across different years.\nAnalytical Method: In addressing the financial success of holiday movies and its correlation with various features, we will integrate linear regression analysis to explore the relationships between movie characteristics (such as genre, duration, and ratings) and box office earnings."
  },
  {
    "objectID": "proposal.html#project-timeline",
    "href": "proposal.html#project-timeline",
    "title": "Season’s Screenings",
    "section": "Project Timeline",
    "text": "Project Timeline\n\n\n\n\n\n\n\n\n\nTask\nDesciption\nStart\nEnd\n\n\n\n\n1\nChoose a dataset and write up proposal\n2024-01-30\n2024-02-06\n\n\n2\nReceive feedback on proposal and make necessery changes\n2024-02-06\n2024-02-13\n\n\n3\nPerform data analysis and work on presentation and write-up\n2024-02-13\n2024-02-27\n\n\n4\nFinalize analysis, write-up, presentation and project website\n2024-02-27\n2024-03-12"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Season’s Screenings: Exploring Trends in Holiday Movies",
    "section": "",
    "text": "The provided dataset is a structured compilation of films with a central theme or element of holidays, spanning almost a century from 1929 to 2022. The dataset includes various attributes such as the original title of the movie, its release year, the runtime in minutes, the genre(s), a simplified title, the average rating, the number of votes the movie received, and boolean indicators for its association with major holidays like Christmas, Hanukkah, Kwanzaa, and whether it is related to a holiday in general."
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "Season’s Screenings: Exploring Trends in Holiday Movies",
    "section": "",
    "text": "The provided dataset is a structured compilation of films with a central theme or element of holidays, spanning almost a century from 1929 to 2022. The dataset includes various attributes such as the original title of the movie, its release year, the runtime in minutes, the genre(s), a simplified title, the average rating, the number of votes the movie received, and boolean indicators for its association with major holidays like Christmas, Hanukkah, Kwanzaa, and whether it is related to a holiday in general."
  },
  {
    "objectID": "index.html#how-have-popular-movies-changed-over-the-decades",
    "href": "index.html#how-have-popular-movies-changed-over-the-decades",
    "title": "Season’s Screenings: Exploring Trends in Holiday Movies",
    "section": "How have popular movies changed over the decades?",
    "text": "How have popular movies changed over the decades?\n\nIntroduction\nThe objective of the proposed analysis is to explore the evolution of popular holiday movies across decades. The focus will be on movies with average ratings in the upper two quartiles, which suggests a positive reception from viewers. This subset of data is essential to understand the shifting preferences of the audience in terms of genre, movie duration, and title length. By isolating films that are more favored, we aim to identify patterns that signify what attributes contribute to the success and popularity of holiday movies.\nTo answer this question, we will employ specific parts of the dataset that include the title, release year, genre, duration, and ratings of each movie. An additional variable—Title Length—will be calculated to examine the correlation between the length of a movie’s title and its popularity. Rating quartiles will be used to classify movies into different levels of reception. Furthermore, the Genre Count will provide insights into the complexity and variety within holiday movies. This analysis is not just a reflection of cinematic trends but also serves to illuminate the changing cultural landscape surrounding holiday themes in films, thus offering valuable information to both film enthusiasts and industry analysts.\n\n\nApproach\nTo address the question of how popular holiday movies have changed over the decades, our approach will involve a blend of descriptive statistics and visual analysis. Firstly, we will perform quartile analysis to categorize movies based on their average ratings. This method segments the data into four equal parts, allowing us to focus specifically on movies in the 3rd to 4th quartile range, which are deemed popular by viewers. Quartile analysis is an effective way to filter the dataset and ensure that the subsequent trends we observe are representative of films that have been well-received, providing a clear picture of what attributes are associated with higher ratings.\nFor the visual analysis, two types of plots will be created. The first plot will be a multi-faceted bar chart that illustrates the distribution of genres within the top quartiles over different decades. By using color mapping, we will be able to distinguish between genres within the same time frame easily, which will enable us to identify any shifts in genre popularity or diversification trends. The second plot will be a scatter plot correlating movie duration and average rating, with movies also color-coded based on their title length. This will allow us to observe if there’s a preferred movie length that correlates with higher ratings, and whether longer or shorter movie titles are trending among the more popular films. The use of facets will further enhance this analysis by breaking down these trends by decade, giving us a temporal perspective on how these relationships have evolved over time. Both methods combined will provide a comprehensive understanding of the dynamics of popular holiday movies, highlighting changes in consumer preferences and industry patterns.\n\n\nAnalysis\n\n#import libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n# Load the dataset\ndf = pd.read_csv('data/holiday_movies.csv')\nnew_genres = pd.read_csv('data/holiday_movie_genres.csv')\n\n# Check for missing values\nmissing_values = df.isnull().sum()\nprint(missing_values)\n\n# Strategy for handling missing values\n# Drop rows where 'genres' is missing and use .copy() to avoid SettingWithCopyWarning\ndf_cleaned = df.dropna(subset=['genres']).copy()\n\n# Impute missing values in 'runtime_minutes' with the median of the non-missing values\nmedian_runtime = df_cleaned['runtime_minutes'].median()\ndf_cleaned.loc[:, 'runtime_minutes'] = df_cleaned['runtime_minutes'].fillna(median_runtime)\n\n# Verify the imputation by checking if there are still missing values in 'runtime_minutes'\nmissing_after_imputation = df_cleaned.isnull().sum()\nprint(f\"Missing Value after modification : {missing_after_imputation}\")\n\n# Create new variables on the cleaned dataset\n# Calculate the length of each movie title using .loc to safely modify the DataFrame\ndf_cleaned.loc[:, 'title_length'] = df_cleaned['original_title'].apply(len)\n\n# Determine the rating quartile for each movie\ndf_cleaned.loc[:, 'rating_quartile'] = pd.qcut(df_cleaned['average_rating'], 4, labels=False)\n\n# Count the number of genres per movie, handling NaN if present\ndf_cleaned.loc[:, 'genre_count'] = df_cleaned['genres'].apply(lambda x: len(x.split(',')) if pd.notnull(x) else 0)\n\n# Filter to include only movies in the 3rd and 4th rating quartiles and use .copy() for top_movies\ntop_movies = df_cleaned[df_cleaned['rating_quartile'] &gt;= 2].copy()\n\n# Organize the data by decades using .loc to avoid SettingWithCopyWarning\ntop_movies.loc[:, 'decade'] = (top_movies['year'] // 10) * 10\n\n#Merge the new genre dataset with the  existing cleaned DataFrame\nmerged_df = pd.merge(top_movies, new_genres, on='tconst', how='left')\n\ntconst               0\ntitle_type           0\nprimary_title        0\noriginal_title       0\nyear                 0\nruntime_minutes    189\ngenres              32\nsimple_title         0\naverage_rating       0\nnum_votes            0\nchristmas            0\nhanukkah             0\nkwanzaa              0\nholiday              0\ndtype: int64\nMissing Value after modification : tconst             0\ntitle_type         0\nprimary_title      0\noriginal_title     0\nyear               0\nruntime_minutes    0\ngenres             0\nsimple_title       0\naverage_rating     0\nnum_votes          0\nchristmas          0\nhanukkah           0\nkwanzaa            0\nholiday            0\ndtype: int64\n\n\n\n#Genre Analysis\n\n# Count the frequency of each genre within the 3rd and 4th rating quartiles\ngenre_counts = merged_df['genres_y'].value_counts()\nplt.figure(figsize=(12, 8))\nsns.barplot(x=genre_counts.values, y=genre_counts.index, palette='viridis')\nplt.xlabel('Number of Movies')\nplt.ylabel('Genre')\nplt.title('Most Common Genres Among Top-Rated Holiday Movies')\nplt.show()\n\n# Duration Analysis plot\n\n# Create a boxplot to visualize the distribution of movie runtimes across different rating quartiles\n# 'x' specifies the categorical variable 'rating_quartile' for the x-axis\n# 'y' specifies the numerical variable 'runtime_minutes' for the y-axis\nplt.figure(figsize=(12, 8))\nsns.boxplot(x=\"rating_quartile\", y=\"runtime_minutes\", data=top_movies)\nplt.xlabel(\"Rating Quartile\")\nplt.ylabel(\"Runtime(min)\")\nplt.title(\"Rating Quartile vs Runtime in Movies\")\nplt.show()\n\n#Title Length Analysis plot\n\n# Create a line plot to visualize the relationship between the length of movie titles and their average ratings\n# 'x' specifies the numerical variable 'title_length' for the x-axis\n# 'y' specifies the numerical variable 'average_rating' for the y-axis\nplt.figure(figsize=(12, 8))\nsns.lineplot(x=\"title_length\", y=\"average_rating\", data=top_movies, color=\"purple\", errorbar=None)\nx_intervals = np.arange(0, max(top_movies['title_length']) + 10, 10)\nplt.xticks(x_intervals)\nplt.xlabel(\"Title Length\")\nplt.ylabel(\"Average Rating\")\nplt.title(\"Title Length vs Average Rating in Movies\")\nplt.show()\n\n/var/folders/vy/_ckqsb7n1bx6d56hzjb3vw040000gn/T/ipykernel_8460/1407777158.py:6: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=genre_counts.values, y=genre_counts.index, palette='viridis')"
  },
  {
    "objectID": "index.html#discussion",
    "href": "index.html#discussion",
    "title": "Season’s Screenings: Exploring Trends in Holiday Movies",
    "section": "Discussion",
    "text": "Discussion\nFrom the genre distribution bar plot, we can observe that Comedy and Drama are the most common genres among top-rated holiday movies. This predominance might suggest that audiences tend to prefer lighter and more emotionally resonant stories during holiday seasons, which aligns with the festive and familial spirit of such times. Family and Romance genres follow, which further emphasizes the desire for movies that bring people together, reflecting typical holiday themes centered around love, family, and togetherness.\nThe second plot, showcasing the relationship between movie runtime and rating quartile, indicates that there isn’t a strong preference for movie length within the top rating quartiles. While there is a concentration of movies with runtimes around 100 minutes (typical for standard feature films), the presence of highly-rated movies with longer runtimes suggests that a film’s duration is less significant to its reception compared to other factors such as story, acting, and direction. However, the spread of runtimes in the 3rd quartile is narrower than in the 4th, hinting that exceptionally well-received movies might have a tighter consistency in their duration.\nThe line plot correlating title length with average rating shows a more erratic relationship. While no clear trend is discernible, there appears to be a slight tendency for movies with shorter titles to have higher ratings, although there are exceptions at various points. This might imply that conciseness in a title could be associated with a film’s memorability or marketing effectiveness, but the numerous outliers make it difficult to draw a definitive conclusion."
  },
  {
    "objectID": "presentation.html#quarto",
    "href": "presentation.html#quarto",
    "title": "Project title",
    "section": "Quarto",
    "text": "Quarto\n\nThe presentation is created using the Quarto CLI\n## sets the start of a new slide"
  },
  {
    "objectID": "presentation.html#layouts",
    "href": "presentation.html#layouts",
    "title": "Project title",
    "section": "Layouts",
    "text": "Layouts\nYou can use plain text\n\n\n\nor bullet points1\n\n\nor in two columns\n\n\n\nlike\nthis\n\nAnd add footnotes"
  },
  {
    "objectID": "presentation.html#code",
    "href": "presentation.html#code",
    "title": "Project title",
    "section": "Code",
    "text": "Code\n\n\n                            OLS Regression Results                            \n==============================================================================\nDep. Variable:                    mpg   R-squared:                       0.073\nModel:                            OLS   Adj. R-squared:                  0.070\nMethod:                 Least Squares   F-statistic:                     30.59\nDate:                Tue, 05 Dec 2023   Prob (F-statistic):           5.84e-08\nTime:                        15:17:43   Log-Likelihood:                -1346.4\nNo. Observations:                 392   AIC:                             2697.\nDf Residuals:                     390   BIC:                             2705.\nDf Model:                           1                                         \nCovariance Type:            nonrobust                                         \n==============================================================================\n                 coef    std err          t      P&gt;|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nconst         35.8015      2.266     15.800      0.000      31.347      40.257\nspeed       -354.7055     64.129     -5.531      0.000    -480.788    -228.623\n==============================================================================\nOmnibus:                       27.687   Durbin-Watson:                   0.589\nProb(Omnibus):                  0.000   Jarque-Bera (JB):               18.976\nSkew:                           0.420   Prob(JB):                     7.57e-05\nKurtosis:                       2.323   Cond. No.                         169.\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
  },
  {
    "objectID": "presentation.html#plots",
    "href": "presentation.html#plots",
    "title": "Project title",
    "section": "Plots",
    "text": "Plots"
  },
  {
    "objectID": "presentation.html#plot-and-text",
    "href": "presentation.html#plot-and-text",
    "title": "Project title",
    "section": "Plot and text",
    "text": "Plot and text\n\n\n\nSome text\ngoes here"
  },
  {
    "objectID": "presentation.html#tables",
    "href": "presentation.html#tables",
    "title": "Project title",
    "section": "Tables",
    "text": "Tables\nIf you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\n\n\n\nisland\n\n\n\nbill_length_mm\n\n\n\nbill_depth_mm\n\n\n\nflipper_length_mm\n\n\n\nbody_mass_g\n\n\n\nsex\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.1\n\n\n\n18.7\n\n\n\n181.0\n\n\n\n3750.0\n\n\n\nMale\n\n\n\n\n\n\n\n1\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.5\n\n\n\n17.4\n\n\n\n186.0\n\n\n\n3800.0\n\n\n\nFemale\n\n\n\n\n\n\n\n2\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n40.3\n\n\n\n18.0\n\n\n\n195.0\n\n\n\n3250.0\n\n\n\nFemale\n\n\n\n\n\n\n\n4\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n36.7\n\n\n\n19.3\n\n\n\n193.0\n\n\n\n3450.0\n\n\n\nFemale\n\n\n\n\n\n\n\n5\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.3\n\n\n\n20.6\n\n\n\n190.0\n\n\n\n3650.0\n\n\n\nMale"
  },
  {
    "objectID": "presentation.html#images",
    "href": "presentation.html#images",
    "title": "Project title",
    "section": "Images",
    "text": "Images\n\nImage credit: Danielle Navarro, Percolate."
  },
  {
    "objectID": "presentation.html#math-expressions",
    "href": "presentation.html#math-expressions",
    "title": "Project title",
    "section": "Math Expressions",
    "text": "Math Expressions\nYou can write LaTeX math expressions inside a pair of dollar signs, e.g. $\\alpha+\\beta$ renders \\(\\alpha + \\beta\\). You can use the display style with double dollar signs:\n$$\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i$$\n\\[\n\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i\n\\]\nLimitations:\n\nThe source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting $$ must appear in the very beginning of a line, followed immediately by a non-space character, and the ending $$ must be at the end of a line, led by a non-space character;\nThere should not be spaces after the opening $ or before the closing $."
  },
  {
    "objectID": "presentation.html#feeling-adventurous",
    "href": "presentation.html#feeling-adventurous",
    "title": "Project title",
    "section": "Feeling adventurous?",
    "text": "Feeling adventurous?\n\nYou are welcomed to use the default styling of the slides. In fact, that’s what I expect majority of you will do. You will differentiate yourself with the content of your presentation.\nBut some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This project was developed by [Team Name] For INFO 523 - Data Mining and Discovery at the University of Arizona, taught by Dr. Greg Chism. The team is comprised of the following team members.\n\nTeam member 1: One sentence description of Team member 1 (e.g., year, major, etc.).\nTeam member 2: One sentence description of Team member 2 (e.g., year, major, etc.).\nTeam member 3: One sentence description of Team member 3 (e.g., year, major, etc.).\nTeam member 4: One sentence description of Team member 4 (e.g., year, major, etc.)."
  }
]